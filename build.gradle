buildscript {

    repositories {
        jcenter()
        maven { url "http://www.datanucleus.org/downloads/maven2/" }
        maven { url 'https://repo.spring.io/libs-milestone' }
        maven { url "http://artifactory.vmcommerce.intra/artifactory/libs-release" }
        maven { url "http://artifactory.vmcommerce.intra/artifactory/libs-snapshot" }
    }
    dependencies {
        classpath 'se.transmode.gradle:gradle-docker:1.2'
        classpath 'com.h2database:h2:1.3.160'
        classpath 'oracle:ojdbc6:11.2.0.3'
    }
}

plugins {
    id 'java'
    id 'io.franzbecker.gradle-lombok' version '1.8'
    id 'org.liquibase.gradle' version '1.2.4'
    id 'net.researchgate.release' version '2.4.0'
    id "org.sonarqube" version "2.5"
    id 'org.springframework.boot' version '1.5.6.RELEASE'
}

apply plugin: 'docker'

ext {
    springBootVersion = '1.5.6.RELEASE'
    springFoxVersion = '2.4.0'
    runList = 'local'
    camelVersion ='2.19.2'
}

repositories {
    mavenLocal()
    maven { url "http://www.datanucleus.org/downloads/maven2/" }
    maven { url "http://artifactory.vmcommerce.intra/artifactory/libs-release" }
    maven { url "http://artifactory.vmcommerce.intra/artifactory/libs-snapshot" }
    jcenter()
}

docker {
    maintainer = "Feeds - Walmart"
    // TODO[r0i001q]: Configurar push para registry do walmart
//    registry = "docker-registry.qa.vmcommerce.intra"
}

release {
    git {
        requireBranch = 'homolog'
    }
}

configurations {
    compile.exclude module: "spring-boot-starter-tomcat"
}

sonarqube {
    properties {
        property "sonar.projectName", "Feeds Admin Api"
        property "sonar.projectKey", "$archivesBaseName"
    }
}

liquibase {
    activities {
        main {
            changeLogFile 'src/main/resources/db/changelog/db.changelog-master.xml'
            url 'jdbc:oracle:thin:@napsao-qa-nix-melf-oracle-1.qa.vmcommerce.intra:1521/MELF'
            username 'FEEDS_ADMIN'
            password 'FEEDS_ADMIN'
        }
        local{
            changeLogFile 'src/main/resources/db/changelog/db.changelog-master.xml'
            url 'jdbc:oracle:thin:@localhost:1521/xe'
            username 'FEEDS_ADMIN'
            password 'FEEDS_ADMIN'
        }
    }
    runList = project.ext.runList
}

task buildDocker(type: Docker) {

    push = false
    dockerfile = file('docker/Dockerfile')
    applicationName = project.name

    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}

task printProjectVersion() {
    println project.version
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-jetty:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"

    compile "io.springfox:springfox-swagger2:${springFoxVersion}"
    compile "io.springfox:springfox-swagger-ui:${springFoxVersion}"
    compile 'de.siegmar:logback-gelf:1.0.4'
    compile "org.apache.camel:camel-spring-boot-starter:${camelVersion}"
    compile "org.apache.camel:camel-csv:${camelVersion}"
    compile "org.apache.camel:camel-bindy:${camelVersion}"
    compile "commons-io:commons-io:2.5"

    compile "oracle:ojdbc6:11.2.0.3"

    compile "org.hibernate:hibernate-java8:5.0.12.Final"

    compile 'com.h2database:h2:1.3.160'

    testCompile "br.com.six2six:fixture-factory:3.1.0"
    testCompile "org.apache.camel:camel-test-spring:${camelVersion}"

}

